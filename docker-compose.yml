

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel_app
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel-network
    # Define un comando de arranque si lo prefieres, por ejemplo:
    # command: php artisan serve --host=0.0.0.0 --port=9000
    # Nota: Si usas Nginx para servir, no necesitas que Laravel use el servidor integrado.

  webserver:
    image: nginx:alpine
    container_name: laravel_webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel-network

  db:
    image: mysql:5.7
    container_name: laravel_db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: angel820
      MYSQL_DATABASE: sustainitypi
      MYSQL_USER: root
      MYSQL_PASSWORD: angel820
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network

networks:
  laravel-network:
    driver: bridge

volumes:
  dbdata:
